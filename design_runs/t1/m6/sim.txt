
Help text file for bch.exe program that generate binary (n,k) BCH code.

bch.exe program uses following input files:
bch.in - to specify input parameters of BCH code, only this file 
	should be changed (if the bch.exe cannot find bch.in file then
	it requests the user to type BCH code and program parameters
bch.vht - data needed to generate enc.vhd and sim.vhd and sim.txt files
bch1.vht - data needed to generate dec.vhd if t (no. of errors) = 1
bch2.vht - data needed to generate dec.vhd if t = 2
bch3.vht - data needed to generate dec.vhd if t > 2
bchs.vht - data needed to generate sym.cmd and sym.cme

bch.exe generates (overwrites !!!) following files:
const.vhd - VHDL package file that contains useful constants
enc.vhd - VHDL file for generating BCH code encoder
dec.vhd - VHDL file for generating BCH code decoder
sim.vhd - VHDL file for generating file for simulation encoder and decoder
sim.cmd - command file for simulation before synthesis
sim.cme - command file for simulation after synthesis

bch.in file should consists of following:
m= xx - specify width of Galois Field GF(2^m), n=2^m-1
t= xx - specify number of errors to be may corrected
program option (placed in bch.in):
-oxx - for t>2 circuit option;
	xx = 2 - parallel architecture
	xx = 3 - serial architecture - preferred.
-sxx - generate sym.cmd and sym.cme with specified 
	by xx simulation time (number of codewords to simulate)
	xx=0 - do not generate simulation command files.
-ix - xx - interleave number. The frequency of Berlekamp-Massey 
	Algorithm in comparison to data transfer (syndrome calculation) frequency.
	f_BMA = interleave * f_syn
-mxx - design optimization by extracting
	xx= 0 -  without optimisation
	xx= 1,2... - with optimization - introduce a new intermediate
		signal only if it reduces the number of XOR at least by xx



There are following BCH codes for m= 6 and t<=1. (n,k,t)
(63, 57, 1) 	



	---------------- ENCODER----------------

ering - LFSR Linear Feedback Shift Registers
		Reg= 6		XOR= 1
ecount - counter (control system)
		Reg= 7		XOR= 1
ENCODER --
		Reg= 1		XOR= 0
	total	Reg= 14		XOR= 2




	-------------- DECODER ---------------

dcount - counter - control system
		Reg= 6		XOR= 1
dsyn1 - syndromes  1
		Reg= 6		XOR= 2
dch1 - Chien Search for x^1
		Reg= 6		XOR= 1
dbuf - buffer for data to be corrected 
		Reg= 65		XOR= 1
dec - DECODER
	total	Reg= 83		XOR= 5



GF(2^6) generated by polynomial: 1 + x^1 + x^6
  no.  Standard    Dual basis
   -   000000     000000
   0   100000     000000
   1   010000     000000
   2   001000     000000
   3   000100     000000
   4   000010     000000
   5   000001     000000
   6   110000     000000
   7   011000     000000
   8   001100     000000
   9   000110     000000
  10   000011     000000
  11   110001     000000
  12   101000     000000
  13   010100     000000
  14   001010     000000
  15   000101     000000
  16   110010     000000
  17   011001     000000
  18   111100     000000
  19   011110     000000
  20   001111     000000
  21   110111     000000
  22   101011     000000
  23   100101     000000
  24   100010     000000
  25   010001     000000
  26   111000     000000
  27   011100     000000
  28   001110     000000
  29   000111     000000
  30   110011     000000
  31   101001     000000
  32   100100     000000
  33   010010     000000
  34   001001     000000
  35   110100     000000
  36   011010     000000
  37   001101     000000
  38   110110     000000
  39   011011     000000
  40   111101     000000
  41   101110     000000
  42   010111     000000
  43   111011     000000
  44   101101     000000
  45   100110     000000
  46   010011     000000
  47   111001     000000
  48   101100     000000
  49   010110     000000
  50   001011     000000
  51   110101     000000
  52   101010     000000
  53   010101     000000
  54   111010     000000
  55   011101     000000
  56   111110     000000
  57   011111     000000
  58   111111     000000
  59   101111     000000
  60   100111     000000
  61   100011     000000
  62   100001     000000
  63   100000     000000